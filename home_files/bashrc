alias yo="echo 'screw you i am not a morning person'"
if [[ `uname` == "Darwin" && `whoami` == "astacy" ]]; then

  # Aliases
  #alias keyon="ssh-add -t 30800"
  #alias keyon="ssh-add"
  #alias keyoff='ssh-add -D'
  #alias keylist='ssh-add -l'
  #alias pp='ps -jAc'

  #if [ -f /Applications/MacVim.app/Contents/MacOS/Vim ]; then
  #  export PATH="/Applications/MacVim.app/Contents/MacOS:$PATH"
  #fi

  [ -d $HOME/.cabal/bin ] && export PATH="${PATH}:$HOME/.cabal/bin"

fi

[ -f "$HOME/.ssh-agent" ] && . $HOME/.ssh-agent

[ -d $HOME/downfrom-jmake/bin ] && \
	export PATH="${PATH}:$HOME/downfrom-jmake/bin"

[ -d /usr/local/mysql/bin ] && export PATH="$PATH:/usr/local/mysql/bin"

[ -d /usr/local/sbin ] && export PATH="$PATH:/usr/local/sbin"

[ -d /usr/local/cuda/bin ] && export PATH="$PATH:/usr/local/cuda/bin"

[ -d $HOME/repositories/siq/bin ] && \
	export PATH="$PATH:$HOME/repositories/siq/bin"

alias l='ls '
alias ll='ls -l'
alias grep="grep --color"

# to get rid of self-assigned ip:
# sudo ipfw -q flush

# Environment Variables
if [ "$TERM" = "xterm-256color" ]; then
	export PS1="
\[\e[38;5;247m\]\u\[\e[38;5;87m\]@\[\e[38;5;247m\]\h\[\e[38;5;87m\]:\[\e[38;5;255m\]\w     \[\e[38;5;30m\]\T \[\e[38;5;30m\]\D{%d-%b}\[\e[0;1m\] 
\[\e[38;5;87m\]$\[\e[0m\] "
else
	export PS1="
\[\e[38;5;195m\]\u\[\e[38;5;196m\]@\[\e[32m\]\h\[\e[33m\]:\w     \[\e[35m\]\T \[\e[31m\]\D{%d-%b}\[\e[0;1m\] 
$\[\e[0m\] "
fi
export SHELL=${SHELL:-${BASH:-/bin/bash}}
export EDITOR=vim
export PAGER="/bin/sh -c \"unset PAGER;col -b -x | view -c 'set ft=man nomod nolist' -c 'map q :q<CR>' -c 'map <SPACE> <C-D>' -c 'nmap K :Man <C-R>=expand(\\\"<cword>\\\")<CR><CR>' -\""

# 1. directories are bold cyan
# 5. executables are red
# 10. and 11. directories that are writable to others are still bolyd cyan,
#             but they have a red background
#export LSCOLORS="GxfxcxdxBxegedfbfgGbGb"
export LSCOLORS=dxfxcxdxbxegedabagacad
if [ `uname` = "Linux" ]; then
	alias ll='ls -l --color=auto'
	eval "$(dircolors -b ~/.dir_colors)"
fi
export CLICOLOR="true"

set -o emacs

if [ -f ~/.pythonrc ]; then
  export PYTHONSTARTUP="$HOME/.pythonrc"
fi

[ -f "$HOME/bin/git-completion.sh" ] && source "$HOME/bin/git-completion.sh"

[ -d "$HOME/bin" ] && export PATH="$PATH:$HOME/bin"

# check if we're on a UT CS machine
if [ -d $HOME/CS395T/bin ]; then
  export PATH=$HOME/CS395T/bin:$PATH
fi

# add my own local directory if needed
if [ -d $HOME/local/bin ]; then
  export PATH=$HOME/local/bin:$PATH
fi

# add tab completion for ssh
my_ssh_hosts="\
	$(echo `cat ~/.ssh/known_hosts | \
	  cut -f 1 -d ' ' | \
	  sed -e s/,.*//g |\
	  uniq | \
	  grep -v "\["`;)"

my_ssh_hosts="$my_ssh_hosts \
	$(egrep -i "Host[[:space:]]" $HOME/.ssh/config | \
	  cut -d' ' -f2)"

complete -W "$my_ssh_hosts" ssh

# set tab width to 4 (useful when you're running "cat" on a file)
if which tabs &>/dev/null; then
	tabs -4
fi

########################################################################
############       At-Work ssh-agent setup               ###############
########################################################################

# this is for when you're working on many different computers that all
# nfs-mount your home dir

# this shouldn't run if i'm just running a remote command via ssh

#if [ "`tty`" != "not a tty" ]; then
#  ssh_agent_pids="`ps -wef | grep $USER.*ssh-agent | egrep -v grep\|defunct | awk '{print $2}'`"
##echo "\$ssh_agent_pids \"$ssh_agent_pids\""
#  num_ssh_agent_pids=`echo "$ssh_agent_pids" | wc -w`

#  # kill off all ssh-agents that don't correspond to the .ssh-agent-* file
#  if [ -f "$HOME/.ssh-agent-`uname -n`" ]; then
##echo "'.ssh-agent-`uname -n`' is a file"
#    current_ssh_agent_pid_from_file="`grep SSH_AGENT_PID= $HOME/.ssh-agent-$(uname -n)| cut -d';' -f1| cud -d'=' -f2`"
#  else
##echo "'.ssh-agent-`uname -n`' is not a file"
#    current_ssh_agent_pid_from_file=""
#  fi
##echo "\$current_ssh_agent_pid_from_file \"$current_ssh_agent_pid_from_file\""

#  if [ -n "$current_ssh_agent_pid_from_file" ]; then
#    ssh_agent_pids_to_kill="`echo "$ssh_agent_pids"| grep -v $current_ssh_agent_pid_from_file`"
#  else
#    ssh_agent_pids_to_kill="$ssh_agent_pids"
#  fi
##echo "\$ssh_agent_pids_to_kill \"$ssh_agent_pids_to_kill\""
#  [ -n "$ssh_agent_pids_to_kill" ] && kill $ssh_agent_pids_to_kill

#  # now that the extraneous ssh-agent's are dead, get the remaining ssh-agent
#  # pid (if it exists)
#  running_ssh_agent_pid="`ps -wef| grep $USER.*ssh-agent| egrep -v grep\|defunct | awk '{print $2}'`"
##echo "\$running_ssh_agent_pid \"$running_ssh_agent_pid\""

#  if [ "$current_ssh_agent_pid_from_file" != "$running_ssh_agent_pid" ]\
#    || [ -z "$running_ssh_agent_pid" ]; then
#    # if there's a ~/.ssh-agent-<hostname> file, it's invalid since there
#    # aren't any ssh-agent's running, so delete it
#    [ -f $HOME/.ssh-agent-`uname -n` ] && rm $HOME/.ssh-agent-`uname -n`

#    # now start up an ssh-agent and source the env vars
##echo "restarting ssh-agent process"
#    nohup ssh-agent -s | grep -v echo > $HOME/.ssh-agent-`uname -n`
#    source $HOME/.ssh-agent-`uname -n`
#    ssh-add
#  else
##echo "using current ssh-agent process"
#    source $HOME/.ssh-agent-`uname -n`
#  fi
#fi

